syntax = "proto2";

package bgs.protocol.presence.v1;

import "bgs/low/pb/client/entity_types.proto";
import "bgs/low/pb/client/presence_types.proto";
import "bgs/low/pb/client/rpc_types.proto";

option cc_generic_services = false;
option optimize_for = CODE_SIZE;

service PresenceService {
    rpc Subscribe(SubscribeRequest) returns (NoData); // method_id: 1
    rpc Unsubscribe(UnsubscribeRequest) returns (NoData); // method_id: 2
    rpc Update(UpdateRequest) returns (NoData); // method_id: 3
    rpc Query(QueryRequest) returns (QueryResponse); // method_id: 4
    rpc Ownership(OwnershipRequest) returns (NoData); // method_id: 5
    rpc SubscribeNotification(SubscribeNotificationRequest) returns (NoData); // method_id: 7
}

message SubscribeRequest {
    optional EntityId agent_id = 1;
    required EntityId entity_id = 2;
    required uint64 object_id = 3;
    repeated fixed32 program = 4;
    optional bool flag_public = 5 [default = true, deprecated = true];
    repeated FieldKey key = 6;
}

message SubscribeNotificationRequest {
    required EntityId entity_id = 1;
}

message UnsubscribeRequest {
    optional EntityId agent_id = 1;
    required EntityId entity_id = 2;
    optional uint64 object_id = 3;
}

message UpdateRequest {
    required EntityId entity_id = 1;
    repeated FieldOperation field_operation = 2;
    optional bool no_create = 3 [default = false];
    optional EntityId agent_id = 4;
}

message QueryRequest {
    required EntityId entity_id = 1;
    repeated FieldKey key = 2;
    optional EntityId agent_id = 3;
}

message QueryResponse {
    repeated Field field = 2;
}

message OwnershipRequest {
    required EntityId entity_id = 1;
    optional bool release_ownership = 2 [default = false];
}
